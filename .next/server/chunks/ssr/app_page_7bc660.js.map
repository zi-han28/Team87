{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/isaac/Desktop/isaac%20branch/app/page.js"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Link from 'next/link';\n\nexport default function Home() {\n  const [messages, setMessages] = useState([\n    { user: 'User1', text: 'Hello!' },\n    { user: 'User2', text: 'Hi there!' }\n  ]);\n  const [newMessage, setNewMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [viewingCommentsForPost, setViewingCommentsForPost] = useState(null);\n\n  // Default posts\n  const defaultPosts = [\n    { id: 1, title: \"What is Newton's law?\", text: \"Newton's laws of motion are three fundamental principles...\", liked: false, likes: 100, comments: [\n      \"Great explanation!\",\n      \"I learned a lot from this post.\",\n      \"Can you provide more examples?\"\n    ], bookmarked: false },\n    { id: 2, title: \"What is Law of Demand?\", text: \"The Law of Demand describes the relationship between price...\", liked: false, likes: 100, comments: [\"Which component is the most important?\"], bookmarked: false },\n    { id: 3, title: \"What components make up a phone?\", text: \"A phone consists of multiple components...\", liked: false, likes: 100, comments: [\"This is a very timely topic.\",\n      \"How did the pandemic affect the global economy?\"], bookmarked: false },\n    { id: 4, title: \"Which countries were most affected by COVID?\", text: \"Many countries were...\", liked: false, likes: 169, comments: [], bookmarked: false }\n  ];\n\n  // Load bookmarked state from localStorage and merge with default posts\n  const [posts, setPosts] = useState(() => {\n    const savedBookmarks = JSON.parse(localStorage.getItem('bookmarks')) || {};\n    const likedPosts = JSON.parse(localStorage.getItem('likesData')) || {};\n    return defaultPosts.map(post => ({\n      ...post,\n      bookmarked: savedBookmarks[post.id] || false, // Use saved bookmarked state or default to false,\n      liked: likedPosts[post.id]?.liked || false, // Use saved bookmarked state or default to false\n      likes: likedPosts[post.id]?.likes ?? post.likes, // Keep likes count if available\n    }));\n  });\n\n//   const [posts, setPosts] = useState(() => {\n//   if (typeof window !== \"undefined\") {\n//     const savedPosts = JSON.parse(localStorage.getItem('posts')) || defaultPosts;\n//     return savedPosts;\n//   }\n//   return defaultPosts;\n// });\n\n  // Save bookmarked state to localStorage\n  const saveBookmarks = (posts) => {\n    const bookmarks = posts.reduce((acc, post) => {\n      acc[post.id] = post.bookmarked;\n      return acc;\n    }, {});\n    localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\n  }; \n\n  const toggleBookmark = (postId) => {\n    const updatedPosts = posts.map(post => \n      post.id === postId ? { ...post, bookmarked: !post.bookmarked } : post\n    );\n    setPosts(updatedPosts);\n    saveBookmarks(updatedPosts); // Save bookmarked state to localStorage\n  };\n\n  // const saveLikes = (posts) => {\n  //   const liked = posts.reduce((acc, post) => {\n  //     acc[post.id] = post.liked;\n  //     return acc;\n  //   }, {});\n  //   localStorage.setItem('liked', JSON.stringify(liked));\n  // }; \n\n  const saveLikes = (posts) => {\n    const liked = posts.reduce((acc, post) => {\n      acc[post.id] = { liked: post.liked, likes: post.likes };\n      return acc;\n    }, {});\n    localStorage.setItem('likesData', JSON.stringify(liked));\n  };\n  \n\n  // const toggleLike = (postId) => {\n  //   const updatedPosts = posts.map(post => \n  //     post.id === postId ? { ...post, liked: !post.liked, likes: post.liked ? post.likes - 1 : post.likes + 1 } : post\n  //   );\n  //   setPosts(updatedPosts);\n  //   saveLikes(updatedPosts);\n\n  //   // Dispatch a custom event to notify other pages (e.g., History page)\n  //   if (typeof window !== \"undefined\") {\n  //     window.dispatchEvent(new Event('likedStateChanged'));\n  //   }\n  // };\n\n  const toggleLike = (postId) => {\n    const updatedPosts = posts.map(post =>\n      post.id === postId \n        ? { ...post, liked: !post.liked, likes: post.liked ? post.likes - 1 : post.likes + 1 } \n        : post\n    );\n    setPosts(updatedPosts);\n    saveLikes(updatedPosts);\n  \n    if (typeof window !== \"undefined\") {\n      window.dispatchEvent(new Event('likedStateChanged'));\n    }\n  };\n  \n  \n\n  const addComment = (postId) => {\n    const comment = prompt('Enter your comment:');\n    if (comment && comment.trim()) {\n      const updatedPosts = posts.map(post => \n        post.id === postId ? { ...post, comments: [...post.comments, comment] } : post\n      );\n      setPosts(updatedPosts);\n    }\n  };\n\n  const viewComments = (postId) => {\n    if (viewingCommentsForPost === postId) {\n      // If the comments for this post are already being viewed, hide them\n      setViewingCommentsForPost(null);\n    } else {\n      // Otherwise, show the comments for this post\n      setViewingCommentsForPost(postId);\n    }\n  };\n\n  const sharePost = (postId) => {\n    console.log(`Post ${postId} shared!`);\n  };\n\n  const handleSend = () => {\n    if (newMessage.trim()) {\n      setMessages(prevMessages => [...prevMessages, { user: 'You', text: newMessage }]);\n      setNewMessage('');\n    }\n  };\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  return (\n    <div className=\"flex flex-col items-center min-h-screen text-white p-6\">\n      {/* Chat Section */}\n      <div className=\"w-4/5 bg-gray-900 p-6 shadow-lg rounded-lg flex flex-col h-96\">\n        <h2 className=\"text-2xl font-bold mb-4\">Chat Room</h2>\n        <div className=\"flex-1 p-4 overflow-y-auto space-y-2 bg-gray-800 rounded-lg\">\n          {messages.map((msg, index) => (\n            <div key={index} className={`p-2 rounded-lg max-w-xs ${msg.user === 'You' ? 'bg-green-400 self-end ml-auto' : 'bg-blue-400'}`}> \n              <strong>{msg.user}: </strong>{msg.text}\n            </div>\n          ))}\n        </div>\n        <div className=\"flex items-center space-x-2 mt-2\">\n          <input\n            type=\"text\"\n            className=\"flex-grow p-2 border rounded-lg text-black focus:outline-none focus:ring-2 focus:ring-blue-400\"\n            placeholder=\"Type your message...\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n          />\n          <button\n            className=\"bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600\"\n            onClick={handleSend}\n          >\n            Send\n          </button>\n        </div>\n      </div>\n\n      {/* Database Section */}\n      <div className=\"w-4/5 mt-8\">\n        <h2 className=\"text-2xl font-bold\">Database</h2>\n        <div className=\"mt-4 space-y-4\">\n          {posts.map(post => (\n            <div key={post.id} className=\"p-4 border border-gray-400 rounded-lg bg-gray-900\">\n              <h3 className=\"font-semibold\">{post.title}</h3>\n              <p className=\"text-sm\">{post.text}</p>\n              <div className=\"flex space-x-2 mt-2\">\n                <button\n                  className={`px-4 py-2 rounded-lg text-white ${post.liked ? 'bg-red-500' : 'bg-blue-500'}`}\n                  onClick={() => toggleLike(post.id)}\n                >\n                  {post.liked ? 'Unlike 👎' : 'Like 👍'} ({post.likes})\n                </button>\n                <button\n                  className=\"bg-yellow-500 px-4 py-2 rounded-lg text-white\"\n                  onClick={() => addComment(post.id)}\n                >\n                  💬 Comment\n                </button>\n                <button\n                  className=\"bg-green-500 px-4 py-2 rounded-lg text-white\"\n                  onClick={() => viewComments(post.id)}\n                >\n                  💬 View Comments ({post.comments.length})\n                </button>\n                <button\n                  className=\"bg-gray-600 px-4 py-2 rounded-lg text-white\"\n                  onClick={() => sharePost(post.id)}\n                >\n                  🔗 Share\n                </button>\n                <button\n                  className={`px-4 py-2 rounded-lg text-white ${post.bookmarked ? 'bg-purple-500' : 'bg-gray-500'}`}\n                  onClick={() => toggleBookmark(post.id)}\n                >\n                  {post.bookmarked ? 'Unbookmark ❌' : 'Bookmark 📌'}\n                </button>\n              </div>\n\n              {viewingCommentsForPost === post.id && (\n                <div className=\"mt-4\">\n                  <h4 className=\"font-semibold\">Comments:</h4>\n                  {post.comments.length > 0 ? (\n                    post.comments.map((comment, index) => (\n                      <div key={index} className=\"p-2 bg-gray-800 rounded-lg mt-2\">\n                        <p className=\"text-sm\">{comment}</p>\n                      </div>\n                    ))\n                  ) : (\n                    <p className=\"text-sm text-gray-400\">No comments yet.</p>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Link to Bookmarked Posts */}\n      <div className=\"w-4/5 mt-8\">\n        <Link href=\"/bookmark\" className=\"bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600\">\n          View Bookmarked Posts\n        </Link>\n      </div>\n\n      {/* Link to Liked Posts History */}\n      <div className=\"w-4/5 mt-8\">\n        <Link href=\"/history\" className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600\">\n          View Liked Posts History\n        </Link>\n      </div>\n\n      {/* Link to Posting Area */}\n<div className=\"w-4/5 mt-8\">\n  <Link href=\"/postingarea\" className=\"bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600\">\n    Go to Posting Area\n  </Link>\n</div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}